import math

# Constants
PANEL_AREA_SQ_M = 1.825  # Square meters per panel
ELECTRICITY_RATE = 0.163  # Cost per kWh ($/kWh)

def calculate_yearly_savings(total_area, yearly_kwh_per_4_panels):
    """
    Calculate yearly electricity savings based on available area and electricity rate.

    Args:
        total_area (float): Total available installation area in square meters.
        yearly_kwh_per_4_panels (float): Yearly energy production of 4 solar panels (kWh).

    Returns:
        tuple: Yearly savings ($) and number of panels installed.
    """
    # Calculate the number of solar panels that fit in the given area
    num_panels = math.floor(total_area / PANEL_AREA_SQ_M)

    # Calculate the yearly kWh output for all installed panels
    yearly_kwh_per_panel = yearly_kwh_per_4_panels / 4  # Convert 4-panel production to per-panel production
    total_yearly_kwh = num_panels * yearly_kwh_per_panel  # Total kWh generated by all installed panels

    # Calculate yearly savings based on electricity rate
    yearly_savings = total_yearly_kwh * ELECTRICITY_RATE

    return yearly_savings, num_panels

def main():
    """
    Main function to take user input and calculate yearly savings.
    """
    try:
        # Get user inputs
        total_area = float(input("Enter the total available area for installation (in square meters): "))
        yearly_kwh_per_4_panels = float(input("Enter the yearly kWh production for 4 solar panels: "))

        # Calculate yearly savings
        yearly_savings, num_panels = calculate_yearly_savings(total_area, yearly_kwh_per_4_panels)

        # Display results
        print(f"\nTotal number of panels that fit: {num_panels}")
        print(f"Total yearly savings on electricity: ${yearly_savings:.2f}")

    except ValueError as e:
        print(f"Error: {e}")

if __name__ == "__main__":
    main()
